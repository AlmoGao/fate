{"ast":null,"code":"import { createStore } from 'vuex';\nimport createPersistedState from \"vuex-persistedstate\";\nimport api from '@/api';\nimport router from '@/router';\nexport default createStore({\n  state: {\n    token: '',\n    userInfo: {},\n    config: {},\n    currGame: {},\n    types: [],\n    actives: []\n  },\n  mutations: {\n    setToken(state, val) {\n      state.token = val;\n    },\n    setUserInfo(state, val) {\n      state.userInfo = val;\n    },\n    setConfig(state, val) {\n      state.config = val;\n    },\n    setCurrGame(state, val) {\n      state.currGame = val;\n    },\n    setTypes(state, val) {\n      state.types = val;\n    },\n    setActives(state, val) {\n      state.actives = val;\n    }\n  },\n  actions: {\n    updateUser({\n      commit\n    }) {\n      api.userConfig().then(res => {\n        // setCookie('token', res.userinfo.token, 30)\n        // setCookie('uid', res.userinfo.id, 30)\n        commit('setUserInfo', res);\n      });\n    }\n  },\n  plugins: [createPersistedState()]\n});","map":{"version":3,"names":["createStore","createPersistedState","api","router","state","token","userInfo","config","currGame","types","actives","mutations","setToken","val","setUserInfo","setConfig","setCurrGame","setTypes","setActives","actions","updateUser","commit","userConfig","then","res","plugins"],"sources":["D:/_My/products/fate/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\r\nimport createPersistedState from \"vuex-persistedstate\"\r\nimport api from '@/api'\r\nimport router from '@/router'\r\n\r\n\r\nexport default createStore({\r\n  state: {\r\n    token: '',\r\n    userInfo: {},\r\n    config: {},\r\n    currGame: {},\r\n    types: [],\r\n    actives: []\r\n  },\r\n  mutations: {\r\n    setToken(state, val) {\r\n      state.token = val\r\n    },\r\n    setUserInfo(state, val) {\r\n      state.userInfo = val\r\n    },\r\n    setConfig(state, val) {\r\n      state.config = val\r\n    },\r\n    setCurrGame(state, val) {\r\n      state.currGame = val\r\n    },\r\n    setTypes(state, val) {\r\n      state.types = val\r\n    },\r\n    setActives(state, val) {\r\n      state.actives = val\r\n    },\r\n  },\r\n  actions: {\r\n    updateUser({ commit }) {\r\n      api.userConfig().then(res => {\r\n        // setCookie('token', res.userinfo.token, 30)\r\n        // setCookie('uid', res.userinfo.id, 30)\r\n        commit('setUserInfo', res)\r\n      })\r\n    },\r\n  },\r\n  plugins: [createPersistedState()]\r\n})\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,MAAM;AAClC,OAAOC,oBAAoB,MAAM,qBAAqB;AACtD,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,MAAM,MAAM,UAAU;AAG7B,eAAeH,WAAW,CAAC;EACzBI,KAAK,EAAE;IACLC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,CAAC,CAAC;IACZC,MAAM,EAAE,CAAC,CAAC;IACVC,QAAQ,EAAE,CAAC,CAAC;IACZC,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE;EACX,CAAC;EACDC,SAAS,EAAE;IACTC,QAAQA,CAACR,KAAK,EAAES,GAAG,EAAE;MACnBT,KAAK,CAACC,KAAK,GAAGQ,GAAG;IACnB,CAAC;IACDC,WAAWA,CAACV,KAAK,EAAES,GAAG,EAAE;MACtBT,KAAK,CAACE,QAAQ,GAAGO,GAAG;IACtB,CAAC;IACDE,SAASA,CAACX,KAAK,EAAES,GAAG,EAAE;MACpBT,KAAK,CAACG,MAAM,GAAGM,GAAG;IACpB,CAAC;IACDG,WAAWA,CAACZ,KAAK,EAAES,GAAG,EAAE;MACtBT,KAAK,CAACI,QAAQ,GAAGK,GAAG;IACtB,CAAC;IACDI,QAAQA,CAACb,KAAK,EAAES,GAAG,EAAE;MACnBT,KAAK,CAACK,KAAK,GAAGI,GAAG;IACnB,CAAC;IACDK,UAAUA,CAACd,KAAK,EAAES,GAAG,EAAE;MACrBT,KAAK,CAACM,OAAO,GAAGG,GAAG;IACrB;EACF,CAAC;EACDM,OAAO,EAAE;IACPC,UAAUA,CAAC;MAAEC;IAAO,CAAC,EAAE;MACrBnB,GAAG,CAACoB,UAAU,CAAC,CAAC,CAACC,IAAI,CAACC,GAAG,IAAI;QAC3B;QACA;QACAH,MAAM,CAAC,aAAa,EAAEG,GAAG,CAAC;MAC5B,CAAC,CAAC;IACJ;EACF,CAAC;EACDC,OAAO,EAAE,CAACxB,oBAAoB,CAAC,CAAC;AAClC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}